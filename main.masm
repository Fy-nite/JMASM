
lbl compare_string
    push R1       
    ; save registers
    push R5
    mov R5 0      
    ; counter
lbl compare_loop:
    mov R6 $R1    
    ; get char from input
    mov R7 $R3    
    ; get char from command
    cmp R6 R7
    jne #compare_fail
    inc R5
    inc R1
    inc R3
    cmp R5 3      
    ; adjust length as needed
    jl #compare_loop
    mov R2 1      
    ; match found
    jmp #compare_end
lbl compare_fail:
    mov R2 0     
     ; no match
lbl compare_end:
    pop R5        
    ; restore registers
    pop R1
    ret

lbl run_command
    out 1 $1     
     ; print hello world
    jmp #main

lbl exit_command
    exit 0

lbl help_command
    DB 2 "Available commands:\nrun - prints Hello World\nexit - exits program\nhelp - shows this message\n"
    out 1 $2
    jmp #main

lbl unknown_command
    DB 3 "Unknown command. Type 'help' for available commands\n"
    out 1 $3
    jmp #main
    
lbl main
    DB 1 "Hello, World!\n"
    DB 20 "run"
    DB 21 "exit"
    DB 22 "help"
    mov R1 500
    mov R2 0      
    ; command selector
    in 1 $500     
    ; read input

    ; check which command it is
    mov R3 20     
    ; pointer to "run"
    call #compare_string
    cmp R2 1
    je #run_command

    mov R3 21     
    ; pointer to "exit"
    call #compare_string
    cmp R2 1
    je #exit_command

    mov R3 22     
    ; pointer to "help"
    call #compare_string
    cmp R2 1
    je #help_command

    jmp #unknown_command
