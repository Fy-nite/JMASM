<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.Finite</groupId>
    <artifactId>MASM</artifactId>
    <version>0.2</version>
    <packaging>jar</packaging>

    <properties>
        <maven.compiler.source>20</maven.compiler.source>
        <maven.compiler.target>20</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <maven-jar-plugin.mainClass>org.finite.MASM.Main</maven-jar-plugin.mainClass>
        <maven-jar-plugin.jarName>MASM</maven-jar-plugin.jarName>
        <launch4j.version>2.3.3</launch4j.version>
        <kotlin.version>2.1.10</kotlin.version>
           <!-- TeaVM Version -->
        <teavm.version>0.8.1</teavm.version>
        <scala.version>2.13.12</scala.version>
        <scala.compat.version>2.13</scala.compat.version>
    </properties>

    <repositories>
        <repository>
            <id>graalvm</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>

        <!-- Kotlin Compilation (First) -->
<build>


    <plugins>
        <!-- Kotlin and Java Compilation (Single Plugin) -->
        <plugin>
    <groupId>org.jetbrains.kotlin</groupId>
    <artifactId>kotlin-maven-plugin</artifactId>
    <version>${kotlin.version}</version>
    <executions>
        <execution>
            <id>compile</id>
            <phase>compile</phase>
            <goals>
                <goal>compile</goal>
            </goals>
        </execution>
        <execution>
            <id>test-compile</id>
            <phase>test-compile</phase>
            <goals>
                <goal>test-compile</goal>
            </goals>
        </execution>
    </executions>
    <configuration>
        <jvmTarget>${maven.compiler.target}</jvmTarget>
        <sourceDirs>
            <sourceDir>src/main/kotlin</sourceDir> <!-- Kotlin Source Directory -->
        </sourceDirs>
    </configuration>
</plugin>

    <!-- Maven Assembly Plugin -->
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
            <execution>
                <phase>package</phase>
                <goals>
                    <goal>single</goal>
                </goals>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>org.finite.Main</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </execution>
        </executions>
    </plugin>

        <!-- Scala Compilation (Second) -->
<plugin>
    <groupId>net.alchim31.maven</groupId>
    <artifactId>scala-maven-plugin</artifactId>
    <version>4.8.1</version>
    <executions>
        <execution>
            <id>compile</id>
            <phase>compile</phase>
            <goals>
                <goal>compile</goal>
            </goals>
        </execution>
        <execution>
            <id>test-compile</id>
            <phase>test-compile</phase>
            <goals>
                <goal>testCompile</goal>
            </goals>
        </execution>
    </executions>
    <configuration>
        <!-- Scala-specific configurations can go here -->
    </configuration>
</plugin>


        <!-- Disable Default Java Compilation (Handled by Kotlin Plugin) -->
       <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-compiler-plugin</artifactId>
    <version>3.8.1</version>
    <configuration>
        <source>${maven.compiler.source}</source>
        <target>${maven.compiler.target}</target>
        <excludes>
            <exclude>**/*.java</exclude>
        </excludes>
    </configuration>
</plugin>

    <!-- Maven Dependency Plugin for Native Libraries -->
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.5.0</version>
        <!-- <executions>
            <execution>
                <id>unpack-native-libs</id>
                <phase>process-resources</phase>
                <goals>
                    <goal>unpack</goal>
                </goals>
                <configuration>
                    <artifactItems>
                        <artifactItem>
                            <groupId>org.bytedeco</groupId>
                            <artifactId>llvm</artifactId>
                            <version>19.1.3-1.5.11</version>
                            <classifier>${os.classifier}</classifier>
                            <type>jar</type>
                            <outputDirectory>${project.build.directory}/native-libs</outputDirectory>
                        </artifactItem>
                    </artifactItems>
                </configuration>
            </execution>
        </executions> -->
    </plugin>
 
    </plugins>
</build>
    <profiles>
        <profile>
            <id>windows</id>
            <properties>
                <os.classifier>windows-x86_64</os.classifier>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.akathist.maven.plugins.launch4j</groupId>
                        <artifactId>launch4j-maven-plugin</artifactId>
                        <version>${launch4j.version}</version>
                        <executions>
                            <execution>
                                <id>l4j-gui</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>launch4j</goal>
                                </goals>
                                <configuration>
                                    <headerType>console</headerType>
                                    <outfile>target/MASM.exe</outfile>
                                    <jar>
                                        ${project.build.directory}/${project.artifactId}-${project.version}-jar-with-dependencies.jar</jar>
                                    <errTitle>MASM Error</errTitle>
                                    <classPath>
                                        <mainClass>org.finite.Main</mainClass>
                                        <addDependencies>false</addDependencies>
                                        <preCp>anything</preCp>
                                    </classPath>
                                    <jre>
                                        <minVersion>20.0.0</minVersion>
                                        <path>%JAVA_HOME%;%PATH%</path>
                                    </jre>
                                    <versionInfo>
                                        <fileVersion>0.0.0.1</fileVersion>
                                        <txtFileVersion>${project.version}</txtFileVersion>
                                        <fileDescription>MASM Interpreter</fileDescription>
                                        <copyright>Finite, all rights reserved</copyright>
                                        <productVersion>0.0.0.1</productVersion>
                                        <txtProductVersion>${project.version}</txtProductVersion>
                                        <productName>MASM</productName>
                                        <internalName>masm</internalName>
                                        <originalFilename>MASM.exe</originalFilename>
                                    </versionInfo>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>linux</id>
            <properties>
                <os.classifier>linux-x86_64</os.classifier>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/linux" />
                                        <copy
                                            file="${project.build.directory}/${project.artifactId}-${project.version}-jar-with-dependencies.jar"
                                            tofile="${project.build.directory}/linux/masm.jar" />
                                        <echo file="${project.build.directory}/linux/masm"
                                            message="#!/bin/sh${line.separator}java -jar `dirname $0`/masm.jar $@" />
                                        <chmod file="${project.build.directory}/linux/masm"
                                            perm="755" />
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- SpotBugs - Static code analysis -->
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <version>4.8.2.0</version>
                    </plugin>

                    <!-- JaCoCo - Code coverage -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>0.8.11</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>report</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <version>4.8.2.0</version>
                        <configuration>
                            <excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
                            <effort>Max</effort>
                            <threshold>Low</threshold>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>native-image-linux</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.nativeimage</groupId>
                        <artifactId>native-image-maven-plugin</artifactId>
                        <version>21.2.0</version>
                        <executions>
                            <execution>
                                <id>build-native-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>native-image</goal>
                                </goals>
                                <configuration>
                                    <mainClass>org.finite.MASM.Main</mainClass>
                                    <outputDirectory>${project.build.directory}/native</outputDirectory>
                                    <imageName>masm-native</imageName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>macos</id>
            <properties>
                <os.classifier>macosx-x86_64</os.classifier>
            </properties>
        </profile>
    </profiles>








    <dependencies>

        <!-- AssertJ - Fluent assertions -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.25.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.jnr</groupId>
            <artifactId>jnr-ffi</artifactId>
            <version>2.2.17</version>
        </dependency>
        <!-- Apache Commons Lang - Utility classes -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.14.0</version>
        </dependency>
        <!-- Mockito - Mocking framework -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.10.0</version>
            <scope>test</scope>
        </dependency>
        <!-- SLF4J API -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.12</version>
        </dependency>

        <!-- Logback Implementation -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.4.14</version>
        </dependency>
        <dependency>
            <groupId>org.tomlj</groupId>
            <artifactId>tomlj</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.jcommander</groupId>
            <artifactId>jcommander</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
            <version>1.81</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>RELEASE</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jline</groupId>
            <artifactId>jline</artifactId>
            <version>3.5.0</version>
        </dependency>
        <!-- Jython -->
        <dependency>
            <groupId>org.python</groupId>
            <artifactId>jython-standalone</artifactId>
            <version>2.7.3</version>
        </dependency>

        <!-- Scala -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <!-- LLVM platform dependency that includes native libraries -->
   
    </dependencies>
</project>